plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	// https://plugins.gradle.org/plugin/com.palantir.docker
    id 'com.palantir.docker' version '0.33.0'
	id "com.palantir.docker-run" version "0.33.0"
}

group = 'org.springframework.boot'
version = '0.0.2-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'
def dockerOwner = 'fabianlee'

repositories {
	mavenCentral()
}

// version
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// CUSTOM
	// versions discovered using original maven: ./mvnw dependency:tree
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus:1.9.0'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.0'

}


tasks.named('test') {
	useJUnitPlatform()
}

// makes BuildProperties available from Spring context
springBoot {
    buildInfo()
}

// hot copies modified resource files
task reload(type: Copy) {
    from 'src/main/resources'
    into 'build/resources/main'
    include 'static/**'
    include 'templates/**'
    include 'custom/**'
}
task reloadModule(type: Copy){
  from '../module/src/main/resources'
  into 'build/resources/main'
  include 'static/**'
  include 'templates/**'
  include 'custom/**'
}

// takes templatized Dockerfile, places into buildDir
task prepareDockerfileTemplate(type: Copy) {
    from "src/main/resources/docker"
    include "Dockerfile*"
    filter { it.replaceAll('<%=name%>', project.name) }
    filter { it.replaceAll('<%=version%>', project.version) }
    into "$buildDir"
}
// add explicit dependency, otherwise we get warning at console
dockerPrepare.dependsOn bootJar
bootJar.dependsOn prepareDockerfileTemplate
bootJarMainClassName.dependsOn prepareDockerfileTemplate

// palantir plugin that handles docker build
// https://github.com/palantir/gradle-docker
docker {
    name "${dockerOwner}/${project.name}:${project.version}" 
	files "$buildDir/libs/${project.name}-${project.version}.jar"
    dockerfile file("$buildDir/Dockerfile")
}

// https://plugins.gradle.org/plugin/com.palantir.docker-run
// https://github.com/palantir/gradle-docker
dockerRun {
    name "${project.name}"
    image "${dockerOwner}/${project.name}:${project.version}"
    ports '8080:8080','8081:8081'
    clean true
	daemonize false
}
